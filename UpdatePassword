import hashlib
import re

# Sample dictionary to store usernames and hashed passwords
user_passwords = {
    "user1": "hashed_password1",
    "user2": "hashed_password2",
    # Add more users as needed
}

def hash_password(password):
    # Use a more secure hashing algorithm in a production environment
    return hashlib.sha256(password.encode()).hexdigest()

def validate_password(password):
    # Validate password based on certain criteria
    # For example, requiring at least 8 characters with one uppercase letter, one digit, and one special character
    return bool(re.match(r'^(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$', password))

def update_password(username, newpassword):
    if username in user_passwords and validate_password(newpassword):
        user_passwords[username] = hash_password(newpassword)
        return True
    else:
        return False

# Example usage
if __name__ == "__main__":
    # Get username and new password from the user
    username_input = input("Enter username: ")
    password_input = input("Enter new password: ")

    # Update password for the provided username and password
    if update_password(username_input, password_input):
        print(f"Password updated successfully for {username_input}.")
    else:
        print("Failed to update password. Please check the username and password.")
